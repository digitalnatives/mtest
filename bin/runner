#!/usr/bin/env coffee

{getIP}     = require __dirname+'/../lib/vendor/ip'
request     = require __dirname+'/../node_modules/request'
http        = require 'http'
querystring = require 'querystring'
fs          = require 'fs'

results = []
class Runner
  start: (@clientPort, @serverPort, @pages, @cluster, @ip)->
    @endpoint = "http://"+@ip+":"+@serverPort+"/"
    @next()

  assembeURL: (item)->
    [server,browsers] = item
    query =
      browsers: browsers.join("|")
      endpoint :@endpoint
    ["http://#{server}:#{@clientPort}/start?"+querystring.stringify(query), @pages.join("|") ]

  next: ->
    item = @cluster.shift()
    if item
      console.log 'Calling '+item[0]
      [url,body] = @assembeURL(item)
      console.log body
      request {url: url, method: "POST", body: body}, ->
    else
      exitCode = 0
      for r in results
        if r.failed > 0
          exitCode = 1
        console.log "#{r.platform}:#{r.browser} failed: #{r.failed}, passed: #{r.passed}, skipped: #{r.skipped}"
      process.exit(exitCode)


runner = new Runner
Server = http.createServer (req,res) ->

  [url,query] = req.url.split("?")
  query = querystring.parse(query)

  switch url
    when "/report"
      data = ""
      req.on "data", (chunk) -> data += chunk.toString()
      req.on "end", ->
        results.push JSON.parse(data)
        res.end()
    when "/finished"
      console.log 'Finished'
      res.end()
      runner.next()

start = (port,pages,cluster, ip) ->
  Server.listen port
  runner.start 4000, port, pages, cluster, ip

try
  config = JSON.parse(fs.readFileSync('mtest.json'))
  cluster = []
  for key, value of config.cluster
    cluster.push [key, value]
  start config.port, config.pages, cluster, config.ip
catch e
  console.log e