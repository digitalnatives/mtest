{getIP}     = require __dirname+'/../lib/vendor/ip'
request     = require 'request'
http        = require 'http'
querystring = require 'querystring'

class Runner
  start: (@clientPort, @serverPort, @page, @cluster)->
    getIP (error, ip) =>
      @endpoint = "http://"+ip+":"+@serverPort+"/"
      @next()

  assembeURL: (item)->
    [server,browsers] = item
    query =
      browsers: browsers.join("|")
      page: @page
      endpoint :@endpoint
    "#{server}:#{@clientPort}/start?"+querystring.stringify query

  next: ->
    item = @cluster.shift()
    if item
      console.log 'Calling '+item[0]
      request.get @assembeURL(item), ->
    else
      process.exit()


runner = new Runner
Server = http.createServer (req,res) ->

  [url,query] = req.url.split("?")
  query = querystring.parse(query)

  switch url
    when "/report"
      data = ""
      req.on "data", (chunk) -> data += chunk.toString()
      req.on "end", ->
        console.log JSON.parse(data)
        res.end()
    when "/finished"
      console.log 'finished'
      res.end()
      runner.next()

start = (port,page,cluster) ->
  Server.listen port
  runner.start 4000, port, page, cluster

port = 4001
page = "http://10.0.5.111:3000/"
cluster = [
  ["http://localhost",['firefox','chrome']]
]
start port,page, cluster