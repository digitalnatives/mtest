#!/usr/bin/env coffee

{getIP}     = require __dirname+'/../lib/vendor/ip'
request     = require __dirname+'/../node_modules/request'
http        = require 'http'
querystring = require 'querystring'
nconf       = require 'nconf'
mdns        = require 'mdns'

ips = []
browser = mdns.createBrowser(mdns.tcp("http"))
browser.on "serviceUp", (service) ->
  if service.port is 4321
    if ips.indexOf(service.addresses[0]) is -1
      ips.push service.addresses[0]
browser.start()

nconf.argv
  port:
    default: 4001
  page:
    default: null

if nconf.get('page') is null
  console.log 'No page was specified!'
  process.exit(1)

class Runner
  start: (@clientPort, @serverPort, @page, @cluster)->
    getIP (error, ip) =>
      @endpoint = "http://"+ip+":"+@serverPort+"/"
      @next()

  assembeURL: (server)->
    query =
      page: @page
      endpoint :@endpoint
    "http://#{server}:#{@clientPort}/start?"+querystring.stringify query

  next: ->
    item = @cluster.shift()
    if item
      console.log 'Calling '+@assembeURL(item)
      request.get @assembeURL(item), ->
    else
      process.exit()


runner = new Runner
Server = http.createServer (req,res) ->

  [url,query] = req.url.split("?")
  query = querystring.parse(query)

  switch url
    when "/report"
      data = ""
      req.on "data", (chunk) -> data += chunk.toString()
      req.on "end", ->
        console.log JSON.parse(data)
        res.end()
    when "/finished"
      console.log 'finished'
      res.end()
      runner.next()

start = (port,page) ->
  Server.listen port
  console.log 'Discovering nodes'
  setTimeout ->
    runner.start 4231, port, page, ips
  , 5000

port = 4001
page = "http://10.0.5.111:3000/"
start port,page